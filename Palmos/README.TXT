Technical overview:

When Palm OS launches the application, it calls PilotMain() in Main.cpp. This function initializes the application, displays the overview form, and starts a loop to wait for form-display events. A form is a relatively static collection of graphical user interface elements like fields, strings, tables, and buttons. Form layouts are defined in the .rcp text files, with Main.rcp collecting several minor forms and assets. When a form is displayed, the loop in Main.cpp registers it with the OS to receive GUI input events. Each form has its own .cpp file with  code to handle changes in the application while that form is displayed. For example, the overview form has OverviewForm.cpp.

Besides forms, the basic data of the application are defined in Performer.cpp/h and CombatQOGC.cpp/h. The classes defined are Performer and its children Character and Effect. They are split into Performer and CombatQOGC to expose open content code in the CombatQOGC files while keeping the Performer files private. As such, the D20 RPG rules logic is implemented in CombatQOGC. A Performer is an actor that has a position in the cyclic initiative queue maintained by Combat-Q, a Character is a Performer who takes actions (like a player or NPC), and an Effect is a Performer that simply lasts for a while and then leaves the queue (like a magic spell). Nearly all Performer fields are stored in a persistent database and accessed using accessor functions.
